(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{17:function(e,t,s){"use strict";var n={computed:{unreleased(){return null!==this.apiVersion.match(/-(draft|alpha|beta)/i)},versioned(){return null!==this.$page.regularPath.match(/\/documentation\/([^\/]+)\//)},otherVersions(){return this.$site.themeConfig.versions.map((e,t)=>{var s=this.$site.themeConfig.versions[this.versionIndex],n=this.$site.themeConfig.versions[t];return e.regularPath=this.$page.regularPath.replace(s.path,n.path),e}).filter((e,t)=>t!==this.versionIndex&&this.$site.pages.findIndex(t=>t.regularPath==e.regularPath)>=0)},apiVersion(){return this.version.apiVersions.length?this.version.apiVersions[this.version.apiVersions.length-1]:null},version(){return this.$site.themeConfig.versions[this.versionIndex]},defaultVersion(){return this.$site.themeConfig.versions[this.$site.themeConfig.defaultVersion]},versionIndex(){const{themeConfig:e}=this.$site;var t=this.$page.regularPath.match(/\/documentation\/([^\/]+)\//);if(Array.isArray(t)&&"string"==typeof t[1])for(var s in e.versions)if(e.versions[s].folder===t[1])return parseInt(s);return 0}}},i=s(0),r=Object(i.a)(n,void 0,void 0,!1,null,null,null);t.a=r.exports},217:function(e,t,s){"use strict";var n=s(61);s.n(n).a},227:function(e,t,s){"use strict";s.r(t);var n=s(219),i={name:"ProcessesSpec",mixins:[s(17).a],components:{DocGen:n.a},computed:{documentUrl(){return"/assets/documentation/"+this.version.folder+"/processes.json"}}},r=(s(217),s(0)),o=Object(r.a)(i,(function(){var e=this.$createElement;return(this._self._c||e)("DocGen",{attrs:{document:this.documentUrl,apiVersion:this.apiVersion}})}),[],!1,null,null,null);t.default=o.exports},61:function(e,t,s){}}]);